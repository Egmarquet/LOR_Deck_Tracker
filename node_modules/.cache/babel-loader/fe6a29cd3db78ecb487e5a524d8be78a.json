{"ast":null,"code":"import React, { useState, useEffect, useRef } from \"react\"; // Polling Hook, credit to: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nfunction useInterval(callback, delay) {\n  var savedCallback = useRef(); // Remember the latest callback.\n\n  useEffect(function () {\n    savedCallback.current = callback;\n  }, [callback]); // Set up the interval.\n\n  useEffect(function () {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      var id = setInterval(tick, delay);\n      return function () {\n        return clearInterval(id);\n      };\n    }\n  }, [delay]);\n} // Check to see if the current object is empty or null\n\n\nvar isEmpty = function isEmpty(obj) {\n  if (obj == null) {\n    return true;\n  } else {\n    return Object.getOwnPropertyNames(obj).length == 0;\n  }\n};\n\nexport { useInterval, isEmpty };","map":{"version":3,"sources":["C:/Users/Etienne/Documents/Github/my-app/components/tools.js"],"names":["React","useState","useEffect","useRef","useInterval","callback","delay","savedCallback","current","tick","id","setInterval","clearInterval","isEmpty","obj","Object","getOwnPropertyNames","length"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD,C,CAEA;;AACA,SAASC,WAAT,CAAqBC,QAArB,EAA+BC,KAA/B,EAAsC;AACpC,MAAMC,aAAa,GAAGJ,MAAM,EAA5B,CADoC,CAEpC;;AACAD,EAAAA,SAAS,CAAC,YAAM;AACdK,IAAAA,aAAa,CAACC,OAAd,GAAwBH,QAAxB;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT,CAHoC,CAMpC;;AACAH,EAAAA,SAAS,CAAC,YAAM;AACd,aAASO,IAAT,GAAgB;AACdF,MAAAA,aAAa,CAACC,OAAd;AACD;;AACD,QAAIF,KAAK,KAAK,IAAd,EAAoB;AAClB,UAAII,EAAE,GAAGC,WAAW,CAACF,IAAD,EAAOH,KAAP,CAApB;AACA,aAAO;AAAA,eAAMM,aAAa,CAACF,EAAD,CAAnB;AAAA,OAAP;AACD;AACF,GARQ,EAQN,CAACJ,KAAD,CARM,CAAT;AASD,C,CAED;;;AACA,IAAMO,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAAS;AACvB,MAAIA,GAAG,IAAI,IAAX,EAAgB;AACd,WAAO,IAAP;AACD,GAFD,MAGI;AACF,WAAOC,MAAM,CAACC,mBAAP,CAA2BF,GAA3B,EAAgCG,MAAhC,IAA0C,CAAjD;AACD;AACF,CAPD;;AASA,SAASb,WAAT,EAAsBS,OAAtB","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\n// Polling Hook, credit to: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\r\nfunction useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n\r\n// Check to see if the current object is empty or null\r\nconst isEmpty = (obj) => {\r\n  if (obj == null){\r\n    return true\r\n  }\r\n  else{\r\n    return Object.getOwnPropertyNames(obj).length == 0;\r\n  }\r\n}\r\n\r\nexport { useInterval, isEmpty };\r\n"]},"metadata":{},"sourceType":"module"}